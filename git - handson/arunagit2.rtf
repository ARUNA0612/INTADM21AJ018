{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fmodern\fprq1 Lucida Console;}{\f1\fnil\fcharset0 Calibri;}}
{\colortbl ;\red0\green191\blue0;\red191\green0\blue191;\red191\green191\blue0;\red0\green191\blue191;\red0\green0\blue255;\red96\green96\blue255;\red191\green0\blue0;\red64\green255\blue255;\red64\green255\blue64;\red255\green64\blue64;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\cf1\f0\fs18\lang9 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~\par
\cf0 $ cd git\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git remote add orgin {{\field{\*\fldinst{HYPERLINK https://gitlab.com/ammu1618/git.git }}{\fldrslt{https://gitlab.com/ammu1618/git.git\ul0\cf0}}}}\f0\fs18\par
error: remote orgin already exists.\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git commit -m "initial commit"\par
On branch master\par
nothing to commit, working tree clean\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git push orgin master\par
git@gitlab.com: Permission denied (publickey,keyboard-interactive).\par
fatal: Could not read from remote repository.\par
\par
Please make sure you have the correct access rights\par
and the repository exists.\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git status\par
On branch master\par
nothing to commit, working tree clean\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ ls -al\par
total 17\par
drwxr-xr-x 1 Lenovo 197610  0 May 26 19:41 \cf6 .\cf0 /\par
drwxr-xr-x 1 Lenovo 197610  0 May 28 11:25 \cf6 ..\cf0 /\par
drwxr-xr-x 1 Lenovo 197610  0 May 30 15:31 \cf6 .git\cf0 /\par
-rw-r--r-- 1 Lenovo 197610 31 May 26 19:41 welcome.txt\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ cat welcome.txt\par
welcome to the version control\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git status\par
On branch master\par
nothing to commit, working tree clean\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git add welcome.txt\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git commit -m "initial commit"\par
On branch master\par
nothing to commit, working tree clean\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git push orgin master\par
git@gitlab.com: Permission denied (publickey,keyboard-interactive).\par
fatal: Could not read from remote repository.\par
\par
Please make sure you have the correct access rights\par
and the repository exists.\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git remote add orgin {{\field{\*\fldinst{HYPERLINK https://gitlab.com/ammu1618/githandson.git }}{\fldrslt{https://gitlab.com/ammu1618/githandson.git\ul0\cf0}}}}\f0\fs18\par
error: remote orgin already exists.\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git push orgin master\par
git@gitlab.com: Permission denied (publickey,keyboard-interactive).\par
fatal: Could not read from remote repository.\par
\par
Please make sure you have the correct access rights\par
and the repository exists.\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git remote add orgin {{\field{\*\fldinst{HYPERLINK https://gitlab.com/ammu1618/mygit.git }}{\fldrslt{https://gitlab.com/ammu1618/mygit.git\ul0\cf0}}}}\f0\fs18\par
error: remote orgin already exists.\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git push orgin master\par
git@gitlab.com: Permission denied (publickey,keyboard-interactive).\par
fatal: Could not read from remote repository.\par
\par
Please make sure you have the correct access rights\par
and the repository exists.\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git init gitdemo\par
Initialized empty Git repository in C:/Users/Lenovo/git/gitdemo/.git/\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ ls -al\par
total 17\par
drwxr-xr-x 1 Lenovo 197610  0 May 30 15:41 \cf6 .\cf0 /\par
drwxr-xr-x 1 Lenovo 197610  0 May 28 11:25 \cf6 ..\cf0 /\par
drwxr-xr-x 1 Lenovo 197610  0 May 30 15:34 \cf6 .git\cf0 /\par
drwxr-xr-x 1 Lenovo 197610  0 May 30 15:41 \cf6 gitdemo\cf0 /\par
-rw-r--r-- 1 Lenovo 197610 31 May 26 19:41 welcome.txt\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git init\par
Reinitialized existing Git repository in C:/Users/Lenovo/git/.git/\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git status\par
On branch master\par
Untracked files:\par
  (use "git add <file>..." to include in what will be committed)\par
        \cf7 gitdemo/\par
\par
\cf0 nothing added to commit but untracked files present (use "git add" to track)\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ echo "welcome to version control">>welcome.txt\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ cat welcome.txt\par
welcome to the version control\par
welcome to version control\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git status\par
On branch master\par
Changes not staged for commit:\par
  (use "git add <file>..." to update what will be committed)\par
  (use "git restore <file>..." to discard changes in working directory)\par
        \cf7 modified:   welcome.txt\par
\par
\cf0 Untracked files:\par
  (use "git add <file>..." to include in what will be committed)\par
        \cf7 gitdemo/\par
\par
\cf0 no changes added to commit (use "git add" and/or "git commit -a")\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git add welcome.txt\par
warning: LF will be replaced by CRLF in welcome.txt.\par
The file will have its original line endings in your working directory\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git commit\par
Aborting commit due to empty commit message.\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git commit -m "first commit"\par
[master 6cb5958] first commit\par
 1 file changed, 1 insertion(+)\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git remote add orgin {{\field{\*\fldinst{HYPERLINK https://gitlab.com/ammu1618/mygit.git }}{\fldrslt{https://gitlab.com/ammu1618/mygit.git\ul0\cf0}}}}\f0\fs18\par
error: remote orgin already exists.\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git remote add origin {{\field{\*\fldinst{HYPERLINK https://gitlab.com/ammu1618/mygit.git }}{\fldrslt{https://gitlab.com/ammu1618/mygit.git\ul0\cf0}}}}\f0\fs18\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git push origin master\par
Enumerating objects: 9, done.\par
Counting objects: 100% (9/9), done.\par
Delta compression using up to 4 threads\par
Compressing objects: 100% (5/5), done.\par
Writing objects: 100% (9/9), 749 bytes | 187.00 KiB/s, done.\par
Total 9 (delta 1), reused 0 (delta 0), pack-reused 0\par
To {{\field{\*\fldinst{HYPERLINK https://gitlab.com/ammu1618/mygit.git }}{\fldrslt{https://gitlab.com/ammu1618/mygit.git\ul0\cf0}}}}\f0\fs18\par
 * [new branch]      master -> master\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ ls -al\par
total 17\par
drwxr-xr-x 1 Lenovo 197610  0 May 30 15:41 \cf6 .\cf0 /\par
drwxr-xr-x 1 Lenovo 197610  0 May 28 11:25 \cf6 ..\cf0 /\par
drwxr-xr-x 1 Lenovo 197610  0 May 30 15:47 \cf6 .git\cf0 /\par
drwxr-xr-x 1 Lenovo 197610  0 May 30 15:41 \cf6 gitdemo\cf0 /\par
-rw-r--r-- 1 Lenovo 197610 58 May 30 15:43 welcome.txt\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ touch example.log\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ mkdir log\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git status\par
On branch master\par
Untracked files:\par
  (use "git add <file>..." to include in what will be committed)\par
        \cf7 example.log\par
\cf0         \cf7 gitdemo/\par
\par
\cf0 nothing added to commit but untracked files present (use "git add" to track)\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ touch ~/.gitignore_global\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git config --global core.excludesfile ~/.gitignore_global\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ vi ~/.gitignore_global\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ cat ~/.gitignore_global\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ *.log\par
bash: example.log: command not found\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git status\par
On branch master\par
Untracked files:\par
  (use "git add <file>..." to include in what will be committed)\par
        \cf7 example.log\par
\cf0         \cf7 gitdemo/\par
\par
\cf0 nothing added to commit but untracked files present (use "git add" to track)\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ cd\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~\par
\cf0 $ mkdir arunaammu\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~\par
\cf0 $ cd arunaammu\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/arunaammu\par
\cf0 $ git init\par
Initialized empty Git repository in C:/Users/Lenovo/arunaammu/.git/\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/arunaammu\cf4  (master)\par
\cf0 $ git status\par
On branch master\par
\par
No commits yet\par
\par
nothing to commit (create/copy files and use "git add" to track)\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/arunaammu\cf4  (master)\par
\cf0 $ git branch\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/arunaammu\cf4  (master)\par
\cf0 $ git status\par
On branch master\par
\par
No commits yet\par
\par
nothing to commit (create/copy files and use "git add" to track)\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/arunaammu\cf4  (master)\par
\cf0 $ cd\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~\par
\cf0 $ cd git\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git branch\par
* \cf1 master\par
\par
Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git branch GitNewbranch\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git branch\par
  GitNewbranch\par
* \cf1 master\par
\par
Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git checkout GitNewBranch\par
Switched to branch 'GitNewBranch'\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitNewBranch)\par
\cf0 $ git branch\par
  GitNewbranch\par
  master\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitNewBranch)\par
\cf0 $ vi example.txt\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitNewBranch)\par
\cf0 $ vi example.txt\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitNewBranch)\par
\cf0 $ git status\par
On branch GitNewBranch\par
Untracked files:\par
  (use "git add <file>..." to include in what will be committed)\par
        \cf7 example.log\par
\cf0         \cf7 example.txt\par
\cf0         \cf7 gitdemo/\par
\par
\cf0 nothing added to commit but untracked files present (use "git add" to track)\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitNewBranch)\par
\cf0 $ git add\par
Nothing specified, nothing added.\par
\cf3 hint: Maybe you wanted to say 'git add .'?\par
hint: Turn this message off by running\par
hint: "git config advice.addEmptyPathspec false"\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitNewBranch)\par
\cf0 $ git add .\par
warning: LF will be replaced by CRLF in example.txt.\par
The file will have its original line endings in your working directory\par
error: 'gitdemo/' does not have a commit checked out\par
fatal: adding files failed\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitNewBranch)\par
\cf0 $ git add arunaammu\par
fatal: pathspec 'arunaammu' did not match any files\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitNewBranch)\par
\cf0 $ git add example.txt\par
warning: LF will be replaced by CRLF in example.txt.\par
The file will have its original line endings in your working directory\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitNewBranch)\par
\cf0 $ git commit -m "example.txt added"\par
[GitNewBranch 4d8bff7] example.txt added\par
 1 file changed, 1 insertion(+)\par
 create mode 100644 example.txt\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitNewBranch)\par
\cf0 $ git status\par
On branch GitNewBranch\par
Untracked files:\par
  (use "git add <file>..." to include in what will be committed)\par
        \cf7 example.log\par
\cf0         \cf7 gitdemo/\par
\par
\cf0 nothing added to commit but untracked files present (use "git add" to track)\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitNewBranch)\par
\cf0 $ git push origin GitNewBranch\par
Enumerating objects: 4, done.\par
Counting objects: 100% (4/4), done.\par
Delta compression using up to 4 threads\par
Compressing objects: 100% (2/2), done.\par
Writing objects: 100% (3/3), 294 bytes | 294.00 KiB/s, done.\par
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0\par
remote:\par
remote: To create a merge request for GitNewBranch, visit:\par
remote:   {{\field{\*\fldinst{HYPERLINK https://gitlab.com/ammu1618/mygit/-/merge_requests/new?merge_request%5Bsource_branch%5D=GitNewBranch }}{\fldrslt{https://gitlab.com/ammu1618/mygit/-/merge_requests/new?merge_request%5Bsource_branch%5D=GitNewBranch\ul0\cf0}}}}\f0\fs18\par
remote:\par
To {{\field{\*\fldinst{HYPERLINK https://gitlab.com/ammu1618/mygit.git }}{\fldrslt{https://gitlab.com/ammu1618/mygit.git\ul0\cf0}}}}\f0\fs18\par
 * [new branch]      GitNewBranch -> GitNewBranch\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitNewBranch)\par
\cf0 $ git log oneline GitNewBranch\par
fatal: ambiguous argument 'oneline': unknown revision or path not in the working tree.\par
Use '--' to separate paths from revisions, like this:\par
'git <command> [<revision>...] -- [<file>...]'\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitNewBranch)\par
\cf0 $ git log oneline master\par
fatal: ambiguous argument 'oneline': unknown revision or path not in the working tree.\par
Use '--' to separate paths from revisions, like this:\par
'git <command> [<revision>...] -- [<file>...]'\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitNewBranch)\par
\cf0 $ git log --oneline GitNewBranch\par
\cf3 4d8bff7 (\cf8 HEAD -> \cf9 GitNewBranch\cf3 , \cf10 origin/GitNewBranch\cf3 )\cf0  example.txt added\par
\cf3 6cb5958 (\cf10 origin/master\cf3 , \cf9 master\cf3 )\cf0  first commit\par
\cf3 9a4ad14\cf0  initial commit\par
\cf3 0eb3aab\cf0  first commit\par
\cf3 c884a73\cf0  first commit\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitNewBranch)\par
\cf0 $ git log --oneline master\par
\cf3 6cb5958 (\cf10 origin/master\cf3 , \cf9 master\cf3 )\cf0  first commit\par
\cf3 9a4ad14\cf0  initial commit\par
\cf3 0eb3aab\cf0  first commit\par
\cf3 c884a73\cf0  first commit\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitNewBranch)\par
\cf0 $ git checkout master\par
Switched to branch 'master'\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git merge GitNewBranch\par
Updating 6cb5958..4d8bff7\par
Fast-forward\par
 example.txt | 1 \cf1 +\par
\cf0  1 file changed, 1 insertion(+)\par
 create mode 100644 example.txt\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git log --oneline master\par
\cf3 4d8bff7 (\cf8 HEAD -> \cf9 master\cf3 , \cf10 origin/GitNewBranch\cf3 , \cf9 GitNewBranch\cf3 )\cf0  example.txt added\par
\cf3 6cb5958 (\cf10 origin/master\cf3 )\cf0  first commit\par
\cf3 9a4ad14\cf0  initial commit\par
\cf3 0eb3aab\cf0  first commit\par
\cf3 c884a73\cf0  first commit\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git push oneline master\par
fatal: 'oneline' does not appear to be a git repository\par
fatal: Could not read from remote repository.\par
\par
Please make sure you have the correct access rights\par
and the repository exists.\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git push origin master\par
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0\par
To {{\field{\*\fldinst{HYPERLINK https://gitlab.com/ammu1618/mygit.git }}{\fldrslt{https://gitlab.com/ammu1618/mygit.git\ul0\cf0}}}}\f0\fs18\par
   6cb5958..4d8bff7  master -> master\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git branch\par
  GitNewBranch\par
* \cf1 master\par
\par
Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git branch GitWork\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git checkout GitWork\par
Switched to branch 'GitWork'\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitWork)\par
\cf0 $ vi i.example\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitWork)\par
\cf0 $ git log --oneline GitWork\par
\cf3 4d8bff7 (\cf8 HEAD -> \cf9 GitWork\cf3 , \cf10 origin/master\cf3 , \cf10 origin/GitNewBranch\cf3 , \cf9 master\cf3 , \cf9 GitNewBranch\cf3 )\cf0  example.txt added\par
\cf3 6cb5958\cf0  first commit\par
\cf3 9a4ad14\cf0  initial commit\par
\cf3 0eb3aab\cf0  first commit\par
\cf3 c884a73\cf0  first commit\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitWork)\par
\cf0 $ git log --oneline master\par
\cf3 4d8bff7 (\cf8 HEAD -> \cf9 GitWork\cf3 , \cf10 origin/master\cf3 , \cf10 origin/GitNewBranch\cf3 , \cf9 master\cf3 , \cf9 GitNewBranch\cf3 )\cf0  example.txt added\par
\cf3 6cb5958\cf0  first commit\par
\cf3 9a4ad14\cf0  initial commit\par
\cf3 0eb3aab\cf0  first commit\par
\cf3 c884a73\cf0  first commit\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitWork)\par
\cf0 $ git add example.txt\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitWork)\par
\cf0 $ git add i.example\par
warning: LF will be replaced by CRLF in i.example.\par
The file will have its original line endings in your working directory\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitWork)\par
\cf0 $ git commit -m "i.example added"\par
[GitWork 61974d4] i.example added\par
 1 file changed, 1 insertion(+)\par
 create mode 100644 i.example\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitWork)\par
\cf0 $ git log oneline GitWork\par
fatal: ambiguous argument 'oneline': unknown revision or path not in the working tree.\par
Use '--' to separate paths from revisions, like this:\par
'git <command> [<revision>...] -- [<file>...]'\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitWork)\par
\cf0 $ git log --oneline GitWork\par
\cf3 61974d4 (\cf8 HEAD -> \cf9 GitWork\cf3 )\cf0  i.example added\par
\cf3 4d8bff7 (\cf10 origin/master\cf3 , \cf10 origin/GitNewBranch\cf3 , \cf9 master\cf3 , \cf9 GitNewBranch\cf3 )\cf0  example.txt added\par
\cf3 6cb5958\cf0  first commit\par
\cf3 9a4ad14\cf0  initial commit\par
\cf3 0eb3aab\cf0  first commit\par
\cf3 c884a73\cf0  first commit\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitWork)\par
\cf0 $ git log --oneline master\par
\cf3 4d8bff7 (\cf10 origin/master\cf3 , \cf10 origin/GitNewBranch\cf3 , \cf9 master\cf3 , \cf9 GitNewBranch\cf3 )\cf0  example.txt added\par
\cf3 6cb5958\cf0  first commit\par
\cf3 9a4ad14\cf0  initial commit\par
\cf3 0eb3aab\cf0  first commit\par
\cf3 c884a73\cf0  first commit\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitWork)\par
\cf0 $ git checkout master\par
Switched to branch 'master'\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ vi i.example\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git add i.example\par
warning: LF will be replaced by CRLF in i.example.\par
The file will have its original line endings in your working directory\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git commit -m "i.example from master"\par
[master 3e8e5e0] i.example from master\par
 1 file changed, 1 insertion(+)\par
 create mode 100644 i.example\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git log --oneline master\par
\cf3 3e8e5e0 (\cf8 HEAD -> \cf9 master\cf3 )\cf0  i.example from master\par
\cf3 4d8bff7 (\cf10 origin/master\cf3 , \cf10 origin/GitNewBranch\cf3 , \cf9 GitNewBranch\cf3 )\cf0  example.txt added\par
\cf3 6cb5958\cf0  first commit\par
\cf3 9a4ad14\cf0  initial commit\par
\cf3 0eb3aab\cf0  first commit\par
\cf3 c884a73\cf0  first commit\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git log --oneline GitWork\par
\cf3 61974d4 (\cf9 GitWork\cf3 )\cf0  i.example added\par
\cf3 4d8bff7 (\cf10 origin/master\cf3 , \cf10 origin/GitNewBranch\cf3 , \cf9 GitNewBranch\cf3 )\cf0  example.txt added\par
\cf3 6cb5958\cf0  first commit\par
\cf3 9a4ad14\cf0  initial commit\par
\cf3 0eb3aab\cf0  first commit\par
\cf3 c884a73\cf0  first commit\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git diff\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git diff i.example\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ vi i.example\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git diff i.example\par
warning: LF will be replaced by CRLF in i.example.\par
The file will have its original line endings in your working directory\par
\b diff --git a/i.example b/i.example\par
index 5d57883..77faf7e 100644\par
--- a/i.example\par
+++ b/i.example\par
\cf4\b0 @@ -1 +1 @@\par
\cf7 -arunaammu\par
\cf1 +candy\par
\par
Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ vi i.example\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git diff i.example\par
warning: LF will be replaced by CRLF in i.example.\par
The file will have its original line endings in your working directory\par
\b diff --git a/i.example b/i.example\par
index 5d57883..ef07ddc 100644\par
--- a/i.example\par
+++ b/i.example\par
\cf4\b0 @@ -1 +1 @@\par
\cf7 -arunaammu\par
\cf1 +cat\par
\par
Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git log --oneline --graph --decorate\par
* \cf3 3e8e5e0 (\cf8 HEAD -> \cf9 master\cf3 )\cf0  i.example from master\par
* \cf3 4d8bff7 (\cf10 origin/master\cf3 , \cf10 origin/GitNewBranch\cf3 , \cf9 GitNewBranch\cf3 )\cf0  example.txt added\par
* \cf3 6cb5958\cf0  first commit\par
* \cf3 9a4ad14\cf0  initial commit\par
* \cf3 0eb3aab\cf0  first commit\par
* \cf3 c884a73\cf0  first commit\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git log --oneline master\par
\cf3 3e8e5e0 (\cf8 HEAD -> \cf9 master\cf3 )\cf0  i.example from master\par
\cf3 4d8bff7 (\cf10 origin/master\cf3 , \cf10 origin/GitNewBranch\cf3 , \cf9 GitNewBranch\cf3 )\cf0  example.txt added\par
\cf3 6cb5958\cf0  first commit\par
\cf3 9a4ad14\cf0  initial commit\par
\cf3 0eb3aab\cf0  first commit\par
\cf3 c884a73\cf0  first commit\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git status\par
On branch master\par
Changes not staged for commit:\par
  (use "git add <file>..." to update what will be committed)\par
  (use "git restore <file>..." to discard changes in working directory)\par
        \cf7 modified:   i.example\par
\par
\cf0 Untracked files:\par
  (use "git add <file>..." to include in what will be committed)\par
        \cf7 example.log\par
\cf0         \cf7 gitdemo/\par
\par
\cf0 no changes added to commit (use "git add" and/or "git commit -a")\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git commit -m "modified i.example"\par
On branch master\par
Changes not staged for commit:\par
  (use "git add <file>..." to update what will be committed)\par
  (use "git restore <file>..." to discard changes in working directory)\par
        \cf7 modified:   i.example\par
\par
\cf0 Untracked files:\par
  (use "git add <file>..." to include in what will be committed)\par
        \cf7 example.log\par
\cf0         \cf7 gitdemo/\par
\par
\cf0 no changes added to commit (use "git add" and/or "git commit -a")\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git status\par
On branch master\par
Changes not staged for commit:\par
  (use "git add <file>..." to update what will be committed)\par
  (use "git restore <file>..." to discard changes in working directory)\par
        \cf7 modified:   i.example\par
\par
\cf0 Untracked files:\par
  (use "git add <file>..." to include in what will be committed)\par
        \cf7 example.log\par
\cf0         \cf7 gitdemo/\par
\par
\cf0 no changes added to commit (use "git add" and/or "git commit -a")\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git add i.example\par
warning: LF will be replaced by CRLF in i.example.\par
The file will have its original line endings in your working directory\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git commit -m " modified from master "\par
[master dcc60e5]  modified from master\par
 1 file changed, 1 insertion(+), 1 deletion(-)\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git status\par
On branch master\par
Untracked files:\par
  (use "git add <file>..." to include in what will be committed)\par
        \cf7 example.log\par
\cf0         \cf7 gitdemo/\par
\par
\cf0 nothing added to commit but untracked files present (use "git add" to track)\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git log --oneline master\par
\cf3 dcc60e5 (\cf8 HEAD -> \cf9 master\cf3 )\cf0   modified from master\par
\cf3 3e8e5e0\cf0  i.example from master\par
\cf3 4d8bff7 (\cf10 origin/master\cf3 , \cf10 origin/GitNewBranch\cf3 , \cf9 GitNewBranch\cf3 )\cf0  example.txt added\par
\cf3 6cb5958\cf0  first commit\par
\cf3 9a4ad14\cf0  initial commit\par
\cf3 0eb3aab\cf0  first commit\par
\cf3 c884a73\cf0  first commit\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git log --oneline GitWork\par
\cf3 61974d4 (\cf9 GitWork\cf3 )\cf0  i.example added\par
\cf3 4d8bff7 (\cf10 origin/master\cf3 , \cf10 origin/GitNewBranch\cf3 , \cf9 GitNewBranch\cf3 )\cf0  example.txt added\par
\cf3 6cb5958\cf0  first commit\par
\cf3 9a4ad14\cf0  initial commit\par
\cf3 0eb3aab\cf0  first commit\par
\cf3 c884a73\cf0  first commit\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git checkout GitWork\par
Switched to branch 'GitWork'\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (GitWork)\par
\cf0 $ git checkout master\par
Switched to branch 'master'\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git merge GitWork\par
CONFLICT (add/add): Merge conflict in i.example\par
Auto-merging i.example\par
Automatic merge failed; fix conflicts and then commit the result.\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master|MERGING)\par
\cf0 $ cat i.example\par
<<<<<<< HEAD\par
cat\par
=======\par
hello\par
>>>>>>> GitWork\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master|MERGING)\par
\cf0 $ log --oneline master\par
bash: log: command not found\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master|MERGING)\par
\cf0 $ git log --oneline master\par
\cf3 dcc60e5 (\cf8 HEAD -> \cf9 master\cf3 )\cf0   modified from master\par
\cf3 3e8e5e0\cf0  i.example from master\par
\cf3 4d8bff7 (\cf10 origin/master\cf3 , \cf10 origin/GitNewBranch\cf3 , \cf9 GitNewBranch\cf3 )\cf0  example.txt added\par
\cf3 6cb5958\cf0  first commit\par
\cf3 9a4ad14\cf0  initial commit\par
\cf3 0eb3aab\cf0  first commit\par
\cf3 c884a73\cf0  first commit\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master|MERGING)\par
\cf0 $ git status\par
On branch master\par
You have unmerged paths.\par
  (fix conflicts and run "git commit")\par
  (use "git merge --abort" to abort the merge)\par
\par
Unmerged paths:\par
  (use "git add <file>..." to mark resolution)\par
        \cf7 both added:      i.example\par
\par
\cf0 Untracked files:\par
  (use "git add <file>..." to include in what will be committed)\par
        \cf7 example.log\par
\cf0         \cf7 gitdemo/\par
\par
\cf0 no changes added to commit (use "git add" and/or "git commit -a")\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master|MERGING)\par
\cf0 $ git add i.example\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master|MERGING)\par
\cf0 $ git commit -m "i.example merged"\par
[master 6034ce6] i.example merged\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ git log --oneline master\par
\cf3 6034ce6 (\cf8 HEAD -> \cf9 master\cf3 )\cf0  i.example merged\par
\cf3 dcc60e5\cf0   modified from master\par
\cf3 3e8e5e0\cf0  i.example from master\par
\cf3 61974d4 (\cf9 GitWork\cf3 )\cf0  i.example added\par
\cf3 4d8bff7 (\cf10 origin/master\cf3 , \cf10 origin/GitNewBranch\cf3 , \cf9 GitNewBranch\cf3 )\cf0  example.txt added\par
\cf3 6cb5958\cf0  first commit\par
\cf3 9a4ad14\cf0  initial commit\par
\cf3 0eb3aab\cf0  first commit\par
\cf3 c884a73\cf0  first commit\par
\par
\cf1 Lenovo@DESKTOP-25MON2V \cf2 MINGW64 \cf3 ~/git\cf4  (master)\par
\cf0 $ cat i.example\par
<<<<<<< HEAD\par
cat\par
=======\par
hello\par
>>>>>>> GitWork\par
\par

\pard\sa200\sl276\slmult1\tx3408\f1\fs22\par
}
 